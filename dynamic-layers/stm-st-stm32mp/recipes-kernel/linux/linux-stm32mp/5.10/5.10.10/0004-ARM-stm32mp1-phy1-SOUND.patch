From 50731fd729c917bc54e91853f949006b9943e27c Mon Sep 17 00:00:00 2001
From: Christophe Parant <c.parant@phytec.fr>
Date: Tue, 5 Jan 2021 14:59:59 +0100
Subject: [PATCH 4/4] ARM stm32mp1 phy1 SOUND

---
 sound/soc/codecs/tlv320aic3x.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/sound/soc/codecs/tlv320aic3x.c b/sound/soc/codecs/tlv320aic3x.c
index 424faafcb85b..8fe5414dca9e 100644
--- a/sound/soc/codecs/tlv320aic3x.c
+++ b/sound/soc/codecs/tlv320aic3x.c
@@ -29,6 +29,7 @@
  *  snd_soc_dapm_disable_pin(codec, "MONO_LOUT"), etc.
  */
 
+#include <linux/clk.h>
 #include <linux/module.h>
 #include <linux/moduleparam.h>
 #include <linux/init.h>
@@ -75,6 +76,7 @@ struct aic3x_priv {
 	struct aic3x_disable_nb disable_nb[AIC3X_NUM_SUPPLIES];
 	struct aic3x_setup_data *setup;
 	unsigned int sysclk;
+        struct clk *mclk_handle;
 	unsigned int dai_fmt;
 	unsigned int tdm_delay;
 	unsigned int slot_width;
@@ -1002,11 +1004,21 @@ static const struct snd_soc_dapm_route intercon_3007[] = {
 	{"SPOM", NULL, "Right Class-D Out"},
 };
 
+static const struct snd_soc_dapm_widget aic3x_dapm_mclk_widgets[] = {
+        SND_SOC_DAPM_CLOCK_SUPPLY("MCLK")
+};
+
 static int aic3x_add_widgets(struct snd_soc_component *component)
 {
 	struct aic3x_priv *aic3x = snd_soc_component_get_drvdata(component);
 	struct snd_soc_dapm_context *dapm = snd_soc_component_get_dapm(component);
 
+        if (aic3x->mclk_handle) {
+                snd_soc_dapm_new_controls(dapm, aic3x_dapm_mclk_widgets, 1);
+        } else {
+                dev_warn(component->dev, "DAPM MCLK widgets not set\n");
+        }
+
 	switch (aic3x->model) {
 	case AIC3X_MODEL_3X:
 	case AIC3X_MODEL_33:
@@ -1690,6 +1702,13 @@ static int aic3x_probe(struct snd_soc_component *component)
 	return 0;
 }
 
+static int aic3x_of_xlate_dai_id(struct snd_soc_component *component,
+				   struct device_node *endpoint)
+{
+	/* return dai id 0, whatever the endpoint index */
+	return 0;
+}
+
 static const struct snd_soc_component_driver soc_component_dev_aic3x = {
 	.set_bias_level		= aic3x_set_bias_level,
 	.probe			= aic3x_probe,
@@ -1699,6 +1718,7 @@ static const struct snd_soc_component_driver soc_component_dev_aic3x = {
 	.num_dapm_widgets	= ARRAY_SIZE(aic3x_dapm_widgets),
 	.dapm_routes		= intercon,
 	.num_dapm_routes	= ARRAY_SIZE(intercon),
+	.of_xlate_dai_id	= aic3x_of_xlate_dai_id,
 	.use_pmdown_time	= 1,
 	.endianness		= 1,
 	.non_legacy_dai_naming	= 1,
@@ -1847,6 +1867,14 @@ static int aic3x_i2c_probe(struct i2c_client *i2c,
 
 	aic3x->model = id->driver_data;
 
+        aic3x->mclk_handle = devm_clk_get(&i2c->dev, "MCLK");
+        if (IS_ERR(aic3x->mclk_handle)) {
+                dev_err(&i2c->dev, "Failed to request MCLK\n");
+                if (PTR_ERR(aic3x->mclk_handle) != -ENOENT)
+                        return PTR_ERR(aic3x->mclk_handle);
+                aic3x->mclk_handle = NULL;
+        }
+
 	if (gpio_is_valid(aic3x->gpio_reset) &&
 	    !aic3x_is_shared_reset(aic3x)) {
 		ret = gpio_request(aic3x->gpio_reset, "tlv320aic3x reset");
-- 
2.17.1

